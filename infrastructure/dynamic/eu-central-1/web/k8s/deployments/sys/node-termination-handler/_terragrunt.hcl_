locals {
  scripts_dir = "${get_parent_terragrunt_dir()}/scripts"
}

terraform {
  #source = "git::git@github.com:bettermarks/terraform-modules.git//terraform-kubernetes-metrics-server"
  source = "${get_parent_terragrunt_dir()}/modules/terraform-deploy-yaml"

  extra_arguments "tf_arguments" {
  commands = ["apply","plan","destroy","apply-all","plan-all","destroy-all"]
  required_var_files = [
    "${get_terragrunt_dir()}/deploy.inputs.tfvars.json"
    ]
  }

  before_hook "before_hook" {
    commands     = ["apply", "plan"]
    execute      = ["./replace.sh","$TF_VAR_replace_variables","src","self","yaml,yml,json,jsn"]
  }

  before_hook "before_hook" {
    commands     = ["apply", "plan"]
    execute      = ["cp","${local.scripts_dir}/health-check.sh","."]
  }
}

# Include all settings from the root terragrunt.hcl file
include {
  path = find_in_parent_folders()
}

# These are the variables we have to pass in to use the module specified in the terragrunt configuration above
inputs = {
  cluster_id = dependency.cluster.outputs.cluster_id
  module_enabled = true
  replace_variables = {
   
  }
}

dependencies {
  paths = ["../../auth","../cluster-auto-scaler"]
}

dependency "cluster" {
  config_path = "../../cluster"

  mock_outputs_allowed_terraform_commands = ["validate", "plan"]
  mock_outputs = {
   cluster_id = ""
   tags = {
     mock-tags = "mocked-tags"
   }
  } 

}